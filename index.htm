<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Beautiful To-Do List</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            padding: 20px;
        }

        .container {
            max-width: 600px;
            margin: 0 auto;
            background: white;
            border-radius: 20px;
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
            overflow: hidden;
        }

        .header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 30px;
            text-align: center;
        }

        .header h1 {
            font-size: 2.5rem;
            margin-bottom: 10px;
            font-weight: 300;
        }

        .header p {
            opacity: 0.9;
            font-size: 1.1rem;
        }

        .input-section {
            padding: 30px;
            background: #f8f9fa;
        }

        .input-group {
            display: flex;
            gap: 15px;
            margin-bottom: 20px;
            flex-wrap: wrap;
        }

        .task-input {
            flex: 1;
            padding: 15px 20px;
            border: 2px solid #e9ecef;
            border-radius: 10px;
            font-size: 1rem;
            transition: all 0.3s ease;
            min-width: 200px;
        }

        .task-input:focus {
            outline: none;
            border-color: #667eea;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }

        .date-input {
            padding: 15px 20px;
            border: 2px solid #e9ecef;
            border-radius: 10px;
            font-size: 1rem;
            transition: all 0.3s ease;
            min-width: 150px;
        }

        .date-input:focus {
            outline: none;
            border-color: #667eea;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }

        .priority-select {
            padding: 15px 20px;
            border: 2px solid #e9ecef;
            border-radius: 10px;
            font-size: 1rem;
            transition: all 0.3s ease;
            min-width: 120px;
            cursor: pointer;
        }

        .priority-select:focus {
            outline: none;
            border-color: #667eea;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }

        .add-btn {
            padding: 15px 30px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border: none;
            border-radius: 10px;
            font-size: 1rem;
            cursor: pointer;
            transition: all 0.3s ease;
            font-weight: 600;
            min-width: 120px;
        }

        .add-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 20px rgba(102, 126, 234, 0.3);
        }

        .tasks-section {
            padding: 30px;
        }

        .section-title {
            font-size: 1.5rem;
            color: #495057;
            margin-bottom: 20px;
            font-weight: 600;
        }

        .task-item {
            display: flex;
            align-items: center;
            padding: 20px;
            background: white;
            border: 2px solid #e9ecef;
            border-radius: 15px;
            margin-bottom: 15px;
            transition: all 0.3s ease;
            animation: slideIn 0.3s ease;
        }

        .task-item:hover {
            transform: translateX(5px);
            border-color: #667eea;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
        }

        .task-item.completed {
            background: #f8f9fa;
            border-color: #28a745;
            opacity: 0.7;
        }

        .task-checkbox {
            width: 20px;
            height: 20px;
            margin-right: 15px;
            cursor: pointer;
            accent-color: #28a745;
        }

        .task-text {
            flex: 1;
            font-size: 1.1rem;
            color: #495057;
            transition: all 0.3s ease;
        }

        .task-item.completed .task-text {
            text-decoration: line-through;
            color: #6c757d;
        }

        .task-details {
            display: flex;
            flex-direction: column;
            gap: 5px;
            margin-left: 15px;
        }

        .task-meta {
            display: flex;
            align-items: center;
            gap: 15px;
            font-size: 0.85rem;
            color: #6c757d;
        }

        .priority-badge {
            padding: 4px 8px;
            border-radius: 12px;
            font-size: 0.75rem;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .priority-high {
            background: #ffebee;
            color: #c62828;
        }

        .priority-medium {
            background: #fff3e0;
            color: #ef6c00;
        }

        .priority-low {
            background: #e8f5e8;
            color: #2e7d32;
        }

        .due-date {
            color: #dc3545;
            font-weight: 500;
        }

        .due-date.overdue {
            color: #c62828;
            font-weight: 700;
        }

        .delete-btn {
            background: #dc3545;
            color: white;
            border: none;
            padding: 8px 15px;
            border-radius: 8px;
            cursor: pointer;
            font-size: 0.9rem;
            transition: all 0.3s ease;
        }

        .delete-btn:hover {
            background: #c82333;
            transform: scale(1.05);
        }

        .empty-state {
            text-align: center;
            padding: 40px;
            color: #6c757d;
        }

        .empty-state img {
            width: 100px;
            opacity: 0.5;
            margin-bottom: 20px;
        }

        .stats {
            display: flex;
            justify-content: space-between;
            padding: 20px 30px;
            background: #f8f9fa;
            border-top: 1px solid #e9ecef;
            color: #6c757d;
            font-size: 0.9rem;
        }

        @keyframes slideIn {
            from {
                opacity: 0;
                transform: translateX(-20px);
            }
            to {
                opacity: 1;
                transform: translateX(0);
            }
        }

        @media (max-width: 768px) {
            .container {
                margin: 10px;
                border-radius: 15px;
            }
            
            .header {
                padding: 20px;
            }
            
            .header h1 {
                font-size: 2rem;
            }
            
            .input-group {
                flex-direction: column;
            }
            
            .task-input, .date-input, .priority-select {
                width: 100%;
                min-width: unset;
            }
            
            .add-btn {
                width: 100%;
                min-width: unset;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>‚ú® To-Do List</h1>
            <p>Organize your day, one task at a time</p>
        </div>
        
        <div class="input-section">
            <div class="input-group">
                <input type="text" class="task-input" id="taskInput" placeholder="What needs to be done?" maxlength="100">
                <input type="date" class="date-input" id="endDateInput">
                <select class="priority-select" id="priorityInput">
                    <option value="low">Low Priority</option>
                    <option value="medium" selected>Medium Priority</option>
                    <option value="high">High Priority</option>
                </select>
                <button class="add-btn" onclick="addTask()">Add Task</button>
            </div>
        </div>
        
        <div class="tasks-section">
            <h2 class="section-title">Your Tasks</h2>
            <div id="tasksList">
                <div class="empty-state" id="emptyState">
                    <div>üìù</div>
                    <p>No tasks yet. Add your first task above!</p>
                </div>
            </div>
        </div>
        
        <div class="stats">
            <span id="totalTasks">Total: 0</span>
            <span id="completedTasks">Completed: 0</span>
        </div>
    </div>

    <script>
        let tasks = JSON.parse(localStorage.getItem('tasks')) || [];
        
        function addTask() {
            const input = document.getElementById('taskInput');
            const endDateInput = document.getElementById('endDateInput');
            const priorityInput = document.getElementById('priorityInput');
            
            const taskText = input.value.trim();
            const endDate = endDateInput.value;
            const priority = priorityInput.value;
            
            if (taskText === '') {
                input.focus();
                return;
            }
            
            const task = {
                id: Date.now(),
                text: taskText,
                completed: false,
                createdAt: new Date().toLocaleString(),
                endDate: endDate,
                priority: priority
            };
            
            tasks.push(task);
            saveTasks();
            renderTasks();
            input.value = '';
            endDateInput.value = '';
            priorityInput.value = 'medium';
            input.focus();
        }
        
        function toggleTask(id) {
            const task = tasks.find(t => t.id === id);
            if (task) {
                task.completed = !task.completed;
                saveTasks();
                renderTasks();
            }
        }
        
        function deleteTask(id) {
            tasks = tasks.filter(t => t.id !== id);
            saveTasks();
            renderTasks();
        }
        
        function saveTasks() {
            localStorage.setItem('tasks', JSON.stringify(tasks));
        }
        
        function renderTasks() {
            const tasksList = document.getElementById('tasksList');
            const emptyState = document.getElementById('emptyState');
            
            if (tasks.length === 0) {
                tasksList.innerHTML = `
                    <div class="empty-state" id="emptyState">
                        <div>üìù</div>
                        <p>No tasks yet. Add your first task above!</p>
                    </div>
                `;
            } else {
                const tasksHTML = tasks.map(task => {
                    const isOverdue = task.endDate && new Date(task.endDate) < new Date() && !task.completed;
                    const priorityClass = `priority-${task.priority}`;
                    const priorityLabel = task.priority.charAt(0).toUpperCase() + task.priority.slice(1);
                    
                    return `
                        <div class="task-item ${task.completed ? 'completed' : ''}">
                            <input type="checkbox" class="task-checkbox" 
                                   ${task.completed ? 'checked' : ''} 
                                   onchange="toggleTask(${task.id})">
                            <div class="task-details">
                                <span class="task-text">${escapeHtml(task.text)}</span>
                                <div class="task-meta">
                                    <span class="priority-badge ${priorityClass}">${priorityLabel}</span>
                                    ${task.endDate ? `<span class="due-date ${isOverdue ? 'overdue' : ''}">üìÖ Due: ${formatDate(task.endDate)}${isOverdue ? ' (OVERDUE!)' : ''}</span>` : ''}
                                </div>
                            </div>
                            <button class="delete-btn" onclick="deleteTask(${task.id})">Delete</button>
                        </div>
                    `;
                }).join('');
                
                tasksList.innerHTML = tasksHTML;
            }
            
            updateStats();
        }
        
        function updateStats() {
            const totalTasks = document.getElementById('totalTasks');
            const completedTasks = document.getElementById('completedTasks');
            
            const completed = tasks.filter(t => t.completed).length;
            
            totalTasks.textContent = `Total: ${tasks.length}`;
            completedTasks.textContent = `Completed: ${completed}`;
        }
        
        function escapeHtml(text) {
            const div = document.createElement('div');
            div.textContent = text;
            return div.innerHTML;
        }

        function formatDate(dateString) {
            const date = new Date(dateString);
            const options = { year: 'numeric', month: 'numeric', day: 'numeric' };
            return date.toLocaleDateString(undefined, options);
        }
        
        // Enter key to add task
        document.getElementById('taskInput').addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                addTask();
            }
        });
        
        // Initial render
        renderTasks();
    </script>
</body>
</html>
